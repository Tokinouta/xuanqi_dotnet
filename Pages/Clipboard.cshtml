@page
@{
    ViewData["Title"] = "Clipboard剪贴板 - 第二大脑";
    Layout = "_LayoutContent";
}


<div id="app">
    <!-- ↓标题栏。 -->
    <div style="border-bottom: 5px solid #e87b00;">
        <b-navbar toggleable="lg" type="light" variant="warning" class="NOBORDER">
            <b-navbar-brand href="/clipboard" class="NOBORDER ml-3"
                style="font-weight: bold;font-size: 24pt;color: rgb(111, 46, 0);">📋clipboard 剪贴板</b-navbar-brand>
            <b-navbar-nav>
                <b-nav-item>
                    <b-button class="ml-3" variant="outline-dark"
                        @@click="syncTxt();clipboard_txts.push('');saveafter5s()">增加文本clip数量+1</b-button>
                    <b-button class="ml-3" variant="outline-danger"
                        @@click="syncTxt();if(clipboard_txts.length>1)clipboard_txts.pop();saveafter5s()">删除最后一个文本clip</b-button>
                </b-nav-item>
            </b-navbar-nav>
        </b-navbar>
    </div>

    <div class="m-3">
        <div v-for="clipboard_txt in clipboard_txts">
            <span style="margin-left: 5px;">文本剪贴板（每2秒自动保存）<b-button variant="warning"
                    @@click="copyStringToClipboard(clipboard_txt)">复制文本</b-button></span>
            <span class="input_box" style="display: block;">
                <center>
                    <textarea rows="9" autofocus id="mainsearchbox" v-model="clipboard_txt" placeholder="在此输入跨设备剪贴文本"
                        class="input_box" style="width: calc(100% - 10px);" @@input="saveafter5s"></textarea>
                </center>
            </span>
            <span style="margin-left: 5px;">剪贴板中所有数字之和： {{getAllNumTotal(clipboard_txt)}}</span>
        </div>
        <div class="d-block mt-5">
            <b-overlay :show="busy_connecting_backend" rounded="sm">
                <h5 style="background-color: antiquewhite;padding: 6px;border-radius: 8px;">
                    选择文件(或直接ctrl+v粘贴png)【仅支持单个文件】：</h5>
                <form role="form" class="form" onsubmit="return false" enctype="multipart/form-data">
                    <div class="form-group">
                        <input id="uploadFilePortal"
                            style="font-size: 20px;width: 100%;padding: 5px;border: 10px solid gold;border-radius: 12px;"
                            type="file" />
                    </div>
                    <button id="uploadSubmit" type="button" style="font-size: 17px;" class="btn btn-warning"
                        @@click="app.tmpProgText2='';uploadFile(false)">→Upload!!!!上传文件←</button>
                </form>
            </b-overlay>
            <b-progress v-if='uploadPercentCompleted<1' id="FileUploadProgressBar" :value="uploadPercentCompleted"
                :max="1" show-progress animated></b-progress>
            <b-progress v-if='uploadPercentCompleted==1' id="FileUploadProgressBar" :value="uploadPercentCompleted"
                :max="1" variant='success'></b-progress>
            <br>
            <h5>当前文件点击下载：</h5>
            <b-button variant="danger" style="font-size: 24px" @@click="getfile(fileinfo)">📑文件：{{fileinfo}}</b-button>
        </div>
        <br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios@0.21.1/dist/axios.min.js"
        integrity="sha256-JLmknTdUZeZZ267LP9qB+/DT7tvxOOKctSKeUC2KT6E=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"
        integrity="sha256-kXTEJcRFN330VirZFl6gj9+UM6gIKW195fYZeR3xDhc=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap-vue@2.21.2/dist/bootstrap-vue.min.js"
        integrity="sha256-duDNIhfVrUK7HB/57nPLxN/j92aM3rhTUFzVI/H5ex8=" crossorigin="anonymous"></script>
    <script type="text/javascript">
        function copyStringToClipboard(str) {
            try { // Remove temporary element
                document.body.removeChild(textarea_copy_el);
            } catch (error) { console.error(error); }
            // Create new element
            textarea_copy_el = document.createElement('textarea');
            // Set value (string to be copied)
            textarea_copy_el.value = str;
            // Set non-editable to avoid focus and move outside of view
            textarea_copy_el.setAttribute('readonly', '');
            textarea_copy_el.style.position = "absolute"
            textarea_copy_el.style.left = "-9999px"
            document.body.appendChild(textarea_copy_el);
            // Select text inside element
            textarea_copy_el.select();
            // Copy text to clipboard
            document.execCommand('copy');
        }
        function err503(error) { app.$bvToast.toast(error, { autoHideDelay: 2500, variant: "danger", toaster: 'b-toaster-bottom-right' }); }
        function getAllNumTotal(str) {
            var a = 0
            var b = str.match(/([0-9]+|[0-9].[0-9]*)/gm)
            if (b) {
                b.forEach(element => {
                    a = a + eval(element)
                })
            }
            return a
        }
        var app = new Vue({
            el: '#app',
            data: {
                clipboard_txts: '{{|clipboard_txts|}}',
                fileinfo: '{{|fileinfo|}}',
                last_save: 0,
                last_input: 0,
                busy_connecting_backend: false,
                uploadPercentCompleted: 0,
                fileUploaded: false
            },
            mounted() {
            },
            methods: {
                syncTxt: function () {
                    var cb_txts = []
                    document.querySelectorAll("textarea.input_box").forEach((e) => { cb_txts.push(e.value) })
                    this.clipboard_txts = cb_txts
                },
                saveafter5s: function () {
                    this.last_input = new Date()
                    setTimeout(() => {
                        当前时间 = new Date(); if ((当前时间 - app.last_save > 1999) && (当前时间 - app.last_input > 1999)) { app.backendsavetxt() }
                    }, 2000);
                },
                backendsavetxt: function () {
                    this.syncTxt()
                    axios.post('/clipboard/save-txt', {
                        text: this.clipboard_txts
                    }).then(function (response) { app.$bvToast.toast(`saved!`, { title: '文本已保存', autoHideDelay: 2500, variant: "success", toaster: 'b-toaster-bottom-right' }) }).catch(function (error) {
                        err503(error.message)
                    })
                },
                getfile: function (path) {
                    window.open(encodeURI("/clipboard/get-file?path=" + path))
                },
                uploadFile: function (file2) {
                    var data = new FormData();
                    console.log(file2)
                    if (file2) {
                        ext = file2.type.split('/').pop();
                        if (file2.type == 'text/plain') { ext = 'txt' }
                        if (file2.type == 'video/x-msvideo') { ext = 'avi' }
                        if (file2.type == 'application/octet-stream') { ext = 'bin' }
                        if (file2.type == 'application/msword') { ext = 'doc' }
                        if (file2.type == 'application/vnd.openxmlformats-officedocument.wordprocessingml.document') { ext = 'docx' }
                        if (file2.type == 'application/epub+zip') { ext = 'epub' }
                        if (file2.type == 'audio/mpeg') { ext = 'mp3' }
                        if (file2.type == 'application/vnd.ms-powerpoint') { ext = 'ppt' }
                        if (file2.type == 'application/vnd.openxmlformats-officedocument.presentationml.presentation') { ext = 'pptx' }
                        if (file2.type == 'application/vnd.rar') { ext = 'rar' }
                        if (file2.type == 'application/vnd.ms-excel') { ext = 'xls' }
                        if (file2.type == 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') { ext = 'xlsx' }
                        data.append('file', file2);
                        this.fileinfo = file2.name
                    }
                    else {
                        tgtfile = document.getElementById('uploadFilePortal').files[0];
                        this.fileinfo = tgtfile.name;
                        data.append('file', tgtfile);
                        ext = tgtfile.name.split('.').pop();
                    }

                    var config = {
                        onUploadProgress: function (progressEvent) {
                            app.uploadPercentCompleted = progressEvent.loaded / progressEvent.total;
                        },
                        cancelToken: new axios.CancelToken(function executor(c) {
                            cancelUploadFunc = c;
                        })
                    };

                    var et = app.edittgtitem;
                    axios.put('/clipboard/upload-file', data, config)
                        .then(function (res) {
                            app.$bvToast.toast(`uploaded!`, { title: '文件已上传', autoHideDelay: 2500, variant: "success", toaster: 'b-toaster-bottom-right' })
                            app.fileUploaded = true;
                        })
                        .catch(function (err) {
                            err503(error.message)
                        });
                },
            }
        });
        document.onpaste = (evt) => {
            const dT = evt.clipboardData || window.clipboardData;
            const file = dT.files[0];
            if (file) { app.uploadFile(file) }
        };
    </script>
</div>